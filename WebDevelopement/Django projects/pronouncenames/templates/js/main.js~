(function(window) {
  function logHTML(e, data) {
    log.innerHTML += "\n" + e + " " + (data || '');
  }

   logHTML('check1');
  var audioContext;
  var audioRecorder;


  var _realAudioInput;


  function handlerStartUserMedia(stream) {

    console.log('handlerStartUserMedia');
    console.log('sampleRate:'+ audioContext.sampleRate);

    // MEDIA STREAM SOURCE -> ZERO GAIN >
    _realAudioInput = audioContext.createMediaStreamSource(stream);

    audioRecorder = new Recorder(_realAudioInput);


  }

  function handlerErrorUserMedia(e) {
      logHTML('No live audio input: ' + e);
  }


  function startRecording(button) {

    if(!audioRecorder)
      return;
    
 
    audioRecorder && audioRecorder.record();

    //GUI
    button.disabled = true;
    button.nextElementSibling.disabled = false;

    logHTML('Recording...');


  }

  function stopRecording(button) {

    if(!audioRecorder)
      return;


    audioRecorder && audioRecorder.stop();

    //GUI
    button.disabled = true;
    button.previousElementSibling.disabled = false;

    logHTML('Stopped recording.');
 

  }


  window.onload = function init() {

    //try {

      // webkit shim.
      window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;

      navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);

      window.URL = window.URL || window.webkitURL;
      
      audioContext = new AudioContext;

      logHTML('Audio context set up.');
      logHTML('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));

    //} catch (e) {

    //  alert('No web audio support in this browser!');

    //}

    
    navigator.getUserMedia({vide:false, audio: true}, handlerStartUserMedia, handlerErrorUserMedia);

  };

  </script>

