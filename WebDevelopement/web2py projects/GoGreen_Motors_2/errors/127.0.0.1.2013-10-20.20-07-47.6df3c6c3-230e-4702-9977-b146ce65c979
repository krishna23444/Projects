(dp1
S'output'
p2
S'<class \'_mysql_exceptions.OperationalError\'> (1050, "Table \'auth_group\' already exists")'
p3
sS'layer'
p4
S'/home/urvashi/Desktop/WEB2PY/web2py/applications/GoGreen_Motors_2/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n  #  db = DAL(\'sqlite://storage.sqlite\',pool_size=1,check_reserved=[\'all\'])\n  db=DAL("mysql://root:urvashi@localhost/DB");\nelse:\n    ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    db = DAL(\'google:datastore\')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False)\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' or \'smtp.gmail.com:587\'\nmail.settings.sender = \'you@gmail.com\'\nmail.settings.login = \'username:password\'\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.rpx_account import use_janrain\nuse_janrain(auth, filename=\'private/janrain.key\')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n\ndb.define_table(\'Delivered\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model_no\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_of_delv\', type = \'date\' ),\n\tSQLField(\'Engine_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Chassis_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Registration_No\', type = \'string\' , length = 255 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Employee_id\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Employees.id) ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Employees\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Fname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Lname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Email_id\', type = \'string\' , length = 255 ),\n\tSQLField(\'Contact\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Positions\', type = \'string\' , length = 255 ),\n\tSQLField(\'Salary\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Expense\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_expense\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Income\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_income\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Inventory\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_recd\', type = \'date\' ),\n\tSQLField(\'Available\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Models\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Name\', type = \'string\' , length = 255 ),\n\tSQLField(\'Price\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Waiting_Period\', type = \'string\' , length = 255 ),\n\tSQLField(\'Availablity\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Waiting_list\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Contact_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Ordered_on\', type = \'date\' ),\n\tSQLField(\'Receipt_No\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Delivered\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model_no\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_of_delv\', type = \'date\' ),\n\tSQLField(\'Engine_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Chassis_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Registration_No\', type = \'string\' , length = 255 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Employee_id\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Employees.id) ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Employees\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Fname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Lname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Email_id\', type = \'string\' , length = 255 ),\n\tSQLField(\'Contact\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Positions\', type = \'string\' , length = 255 ),\n\tSQLField(\'Salary\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Expense\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_expense\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Income\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_income\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Inventory\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_recd\', type = \'date\' ),\n\tSQLField(\'Available\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Models\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Name\', type = \'string\' , length = 255 ),\n\tSQLField(\'Price\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Waiting_Period\', type = \'string\' , length = 255 ),\n\tSQLField(\'Availablity\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Waiting_list\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Contact_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Ordered_on\', type = \'date\' ),\n\tSQLField(\'Receipt_No\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Delivered\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model_no\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_of_delv\', type = \'date\' ),\n\tSQLField(\'Engine_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Chassis_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Registration_No\', type = \'string\' , length = 255 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Employee_id\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Employees.id) ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Employees\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Fname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Lname\', type = \'string\' , length = 255 ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Email_id\', type = \'string\' , length = 255 ),\n\tSQLField(\'Contact\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Positions\', type = \'string\' , length = 255 ),\n\tSQLField(\'Salary\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Expense\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_expense\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Income\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Cause\', type = \'string\' , length = 255 ),\n\tSQLField(\'Date_of_income\', type = \'date\' ),\n\tSQLField(\'Amount\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Inventory\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Date_recd\', type = \'date\' ),\n\tSQLField(\'Available\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Models\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Name\', type = \'string\' , length = 255 ),\n\tSQLField(\'Price\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Waiting_Period\', type = \'string\' , length = 255 ),\n\tSQLField(\'Availablity\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'Waiting_list\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Customer\', type = \'string\' , length = 255 ),\n\tSQLField(\'Model\', type = \'integer\' , length = 11 , requires = IS_IN_DB(db,db.Models.id) ),\n\tSQLField(\'Address\', type = \'longtext\' ),\n\tSQLField(\'Contact_No\', type = \'integer\' , length = 11 ),\n\tSQLField(\'Ordered_on\', type = \'date\' ),\n\tSQLField(\'Receipt_No\', type = \'integer\' , length = 11 ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n\ndb.define_table(\'auth_group\',\n\tSQLField(\'id\', type = \'integer\' , length = 11 ),\n\tSQLField(\'role\', type = \'string\' , length = 255 ),\n\tSQLField(\'description\', type = \'longtext\' ),\n\tprimarykey=[\'id\'],\n\tmigrate=False)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/urvashi/Desktop/WEB2PY/web2py/applications/GoGreen_Motors_2/models/db.py", line 48, in <module>\n    auth.define_tables(username=False, signature=False)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/tools.py", line 1576, in define_tables\n    format=\'%(role)s (%(id)s)\'))\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 7186, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 7222, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 935, in create_table\n    self.create_sequence_and_triggers(query,table)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 1694, in create_sequence_and_triggers\n    self.execute(query)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 1709, in execute\n    return self.log_execute(*a, **b)\n  File "/home/urvashi/Desktop/WEB2PY/web2py/gluon/dal.py", line 1703, in log_execute\n    ret = self.cursor.execute(*a, **b)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (1050, "Table \'auth_group\' already exists")\n'
p11
s.